# version: "3.8"  # Docker Compose V2では不要

services:
  # Development Container
  app:
    image: mcr.microsoft.com/devcontainers/typescript-node:1-22-bookworm
    volumes:
      - ../:/workspace
      - node_modules:/workspace/node_modules:rw
      - /var/run/docker.sock:/var/run/docker-host.sock
      - ~/.anthropic:/home/node/.anthropic:cached
    working_dir: /workspace
    command: sleep infinity
    user: node
    networks:
      - hukulog-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/hukulog
      - REDIS_URL=redis://redis:6379
      - BETTER_AUTH_SECRET=development-secret-key-change-in-production
      - BETTER_AUTH_URL=http://localhost:3000
    ports:
      - "3000:3000"

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    restart: "no"
    environment:
      POSTGRES_DB: hukulog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - hukulog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hukulog"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis (セッション管理、キャッシュ用)
  redis:
    image: redis:7-alpine
    restart: "no"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - hukulog-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Drizzle Studio (データベース管理ツール)
  drizzle-studio:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ../:/app:cached
    command: sh -c "npm install -g drizzle-kit && npx drizzle-kit studio --host 0.0.0.0 --port 4983"
    ports:
      - "4983:4983"
    networks:
      - hukulog-network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/hukulog

  # Adminer (軽量データベース管理ツール)
  adminer:
    image: adminer:4-standalone
    restart: "no"
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: dracula
    networks:
      - hukulog-network
    depends_on:
      postgres:
        condition: service_healthy

  # MailHog (開発用メールサーバー)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: "no"
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - hukulog-network

  # MinIO (S3互換オブジェクトストレージ - 画像ストレージ開発用)
  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    restart: "no"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - hukulog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  node_modules:
    driver: local

networks:
  hukulog-network:
    driver: bridge
    name: hukulog-dev-network

